// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jwch.proto

/*
Package jwch is a generated protocol buffer package.

It is generated from these files:
	jwch.proto

It has these top-level messages:
	LoginRequest
	LoginResponse
	GetInfoRequest
	GetInfoResponse
*/
package jwch

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginRequest struct {
	Stdno    string `protobuf:"bytes,1,opt,name=stdno" json:"stdno,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginRequest) GetStdno() string {
	if m != nil {
		return m.Stdno
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetInfoRequest struct {
	Stdno    string `protobuf:"bytes,1,opt,name=stdno" json:"stdno,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *GetInfoRequest) Reset()                    { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()               {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetInfoRequest) GetStdno() string {
	if m != nil {
		return m.Stdno
	}
	return ""
}

func (m *GetInfoRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type GetInfoResponse struct {
	Stdno    string `protobuf:"bytes,1,opt,name=stdno" json:"stdno,omitempty"`
	Realname string `protobuf:"bytes,2,opt,name=realname" json:"realname,omitempty"`
	Grade    string `protobuf:"bytes,3,opt,name=grade" json:"grade,omitempty"`
	College  string `protobuf:"bytes,4,opt,name=college" json:"college,omitempty"`
}

func (m *GetInfoResponse) Reset()                    { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()               {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetInfoResponse) GetStdno() string {
	if m != nil {
		return m.Stdno
	}
	return ""
}

func (m *GetInfoResponse) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *GetInfoResponse) GetGrade() string {
	if m != nil {
		return m.Grade
	}
	return ""
}

func (m *GetInfoResponse) GetCollege() string {
	if m != nil {
		return m.College
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "LoginResponse")
	proto.RegisterType((*GetInfoRequest)(nil), "GetInfoRequest")
	proto.RegisterType((*GetInfoResponse)(nil), "GetInfoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Jwch service

type JwchClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*LoginResponse, error)
	Getinfo(ctx context.Context, in *GetInfoRequest, opts ...client.CallOption) (*GetInfoResponse, error)
}

type jwchClient struct {
	c           client.Client
	serviceName string
}

func NewJwchClient(serviceName string, c client.Client) JwchClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "jwch"
	}
	return &jwchClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *jwchClient) Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*LoginResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Jwch.Login", in)
	out := new(LoginResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jwchClient) Getinfo(ctx context.Context, in *GetInfoRequest, opts ...client.CallOption) (*GetInfoResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Jwch.Getinfo", in)
	out := new(GetInfoResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Jwch service

type JwchHandler interface {
	Login(context.Context, *LoginRequest, *LoginResponse) error
	Getinfo(context.Context, *GetInfoRequest, *GetInfoResponse) error
}

func RegisterJwchHandler(s server.Server, hdlr JwchHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Jwch{hdlr}, opts...))
}

type Jwch struct {
	JwchHandler
}

func (h *Jwch) Login(ctx context.Context, in *LoginRequest, out *LoginResponse) error {
	return h.JwchHandler.Login(ctx, in, out)
}

func (h *Jwch) Getinfo(ctx context.Context, in *GetInfoRequest, out *GetInfoResponse) error {
	return h.JwchHandler.Getinfo(ctx, in, out)
}

func init() { proto.RegisterFile("jwch.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x90, 0xbf, 0x4e, 0x86, 0x30,
	0x14, 0x47, 0x3f, 0x14, 0x44, 0x6f, 0x04, 0x4c, 0xe3, 0xd0, 0x30, 0x99, 0x4e, 0x4c, 0x1d, 0xf4,
	0x05, 0x8c, 0x0b, 0xd1, 0x38, 0xf1, 0x04, 0x56, 0xb8, 0xfc, 0x31, 0xd8, 0x8b, 0x6d, 0x0d, 0xaf,
	0x6f, 0x2c, 0x42, 0xc4, 0xc4, 0xe5, 0x1b, 0x4f, 0x9b, 0x7b, 0x92, 0xf3, 0x03, 0x78, 0x9b, 0xeb,
	0x5e, 0x4e, 0x86, 0x1c, 0x89, 0x7b, 0xb8, 0x7c, 0xa6, 0x6e, 0xd0, 0x15, 0x7e, 0x7c, 0xa2, 0x75,
	0xec, 0x1a, 0x22, 0xeb, 0x1a, 0x4d, 0x3c, 0xb8, 0x09, 0x8a, 0x8b, 0x6a, 0x01, 0x96, 0xc3, 0xf9,
	0xa4, 0xac, 0x9d, 0xc9, 0x34, 0xfc, 0xc4, 0x7f, 0x6c, 0x2c, 0x32, 0x48, 0x7e, 0x0c, 0x76, 0x22,
	0x6d, 0x51, 0x3c, 0x40, 0x5a, 0xa2, 0x7b, 0xd4, 0x2d, 0x1d, 0x2f, 0xb5, 0x90, 0x6d, 0x8e, 0x45,
	0xfb, 0xbf, 0xc4, 0xa0, 0x1a, 0xb5, 0x7a, 0xc7, 0x55, 0xb2, 0xf2, 0xf7, 0x45, 0x67, 0x54, 0x83,
	0xfc, 0x74, 0xb9, 0xf0, 0xc0, 0x38, 0xc4, 0x35, 0x8d, 0x23, 0x76, 0xc8, 0x43, 0xff, 0xbe, 0xe2,
	0xed, 0x0b, 0x84, 0x4f, 0x73, 0xdd, 0xb3, 0x02, 0x22, 0x5f, 0xc4, 0x12, 0xf9, 0x7b, 0x9b, 0x3c,
	0x95, 0xfb, 0xd0, 0x03, 0x93, 0x10, 0x97, 0xe8, 0x06, 0xdd, 0x12, 0xcb, 0xe4, 0x3e, 0x3a, 0xbf,
	0x92, 0x7f, 0x0a, 0xc4, 0xe1, 0xf5, 0xcc, 0x8f, 0x7e, 0xf7, 0x15, 0x00, 0x00, 0xff, 0xff, 0xea,
	0x4d, 0x77, 0xe0, 0x82, 0x01, 0x00, 0x00,
}
