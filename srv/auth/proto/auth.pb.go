// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	User
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	JWTSignRequest
	JWTSignResponse
	JWTVerifyRequest
	JWTverifyResponse
	UpdateRequest
	UpdateResponse
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id       int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Stdno    string `protobuf:"bytes,2,opt,name=stdno" json:"stdno,omitempty"`
	Realname string `protobuf:"bytes,3,opt,name=realname" json:"realname,omitempty"`
	Grade    string `protobuf:"bytes,4,opt,name=grade" json:"grade,omitempty"`
	College  string `protobuf:"bytes,5,opt,name=college" json:"college,omitempty"`
	Phone    string `protobuf:"bytes,6,opt,name=phone" json:"phone,omitempty"`
	Qq       string `protobuf:"bytes,7,opt,name=qq" json:"qq,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetStdno() string {
	if m != nil {
		return m.Stdno
	}
	return ""
}

func (m *User) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *User) GetGrade() string {
	if m != nil {
		return m.Grade
	}
	return ""
}

func (m *User) GetCollege() string {
	if m != nil {
		return m.College
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *User) GetQq() string {
	if m != nil {
		return m.Qq
	}
	return ""
}

type CreateRequest struct {
	Stdno    string `protobuf:"bytes,1,opt,name=stdno" json:"stdno,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Realname string `protobuf:"bytes,3,opt,name=realname" json:"realname,omitempty"`
	Grade    string `protobuf:"bytes,4,opt,name=grade" json:"grade,omitempty"`
	College  string `protobuf:"bytes,5,opt,name=college" json:"college,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetStdno() string {
	if m != nil {
		return m.Stdno
	}
	return ""
}

func (m *CreateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateRequest) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *CreateRequest) GetGrade() string {
	if m != nil {
		return m.Grade
	}
	return ""
}

func (m *CreateRequest) GetCollege() string {
	if m != nil {
		return m.College
	}
	return ""
}

type CreateResponse struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadRequest struct {
	Stdno string `protobuf:"bytes,1,opt,name=stdno" json:"stdno,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetStdno() string {
	if m != nil {
		return m.Stdno
	}
	return ""
}

type ReadResponse struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type JWTSignRequest struct {
	Stdno    string `protobuf:"bytes,1,opt,name=stdno" json:"stdno,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *JWTSignRequest) Reset()                    { *m = JWTSignRequest{} }
func (m *JWTSignRequest) String() string            { return proto.CompactTextString(m) }
func (*JWTSignRequest) ProtoMessage()               {}
func (*JWTSignRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *JWTSignRequest) GetStdno() string {
	if m != nil {
		return m.Stdno
	}
	return ""
}

func (m *JWTSignRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type JWTSignResponse struct {
	Payload string `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (m *JWTSignResponse) Reset()                    { *m = JWTSignResponse{} }
func (m *JWTSignResponse) String() string            { return proto.CompactTextString(m) }
func (*JWTSignResponse) ProtoMessage()               {}
func (*JWTSignResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *JWTSignResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type JWTVerifyRequest struct {
	Payload string `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (m *JWTVerifyRequest) Reset()                    { *m = JWTVerifyRequest{} }
func (m *JWTVerifyRequest) String() string            { return proto.CompactTextString(m) }
func (*JWTVerifyRequest) ProtoMessage()               {}
func (*JWTVerifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *JWTVerifyRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type JWTverifyResponse struct {
	Stdno string `protobuf:"bytes,1,opt,name=stdno" json:"stdno,omitempty"`
}

func (m *JWTverifyResponse) Reset()                    { *m = JWTverifyResponse{} }
func (m *JWTverifyResponse) String() string            { return proto.CompactTextString(m) }
func (*JWTverifyResponse) ProtoMessage()               {}
func (*JWTverifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *JWTverifyResponse) GetStdno() string {
	if m != nil {
		return m.Stdno
	}
	return ""
}

type UpdateRequest struct {
	Stdno string `protobuf:"bytes,1,opt,name=stdno" json:"stdno,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=phone" json:"phone,omitempty"`
	Qq    string `protobuf:"bytes,3,opt,name=qq" json:"qq,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdateRequest) GetStdno() string {
	if m != nil {
		return m.Stdno
	}
	return ""
}

func (m *UpdateRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UpdateRequest) GetQq() string {
	if m != nil {
		return m.Qq
	}
	return ""
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func init() {
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*CreateRequest)(nil), "CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "ReadResponse")
	proto.RegisterType((*JWTSignRequest)(nil), "JWTSignRequest")
	proto.RegisterType((*JWTSignResponse)(nil), "JWTSignResponse")
	proto.RegisterType((*JWTVerifyRequest)(nil), "JWTVerifyRequest")
	proto.RegisterType((*JWTverifyResponse)(nil), "JWTverifyResponse")
	proto.RegisterType((*UpdateRequest)(nil), "UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "UpdateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Auth service

type AuthClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	JWTSign(ctx context.Context, in *JWTSignRequest, opts ...client.CallOption) (*JWTSignResponse, error)
	JWTVerify(ctx context.Context, in *JWTVerifyRequest, opts ...client.CallOption) (*JWTverifyResponse, error)
}

type authClient struct {
	c           client.Client
	serviceName string
}

func NewAuthClient(serviceName string, c client.Client) AuthClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "auth"
	}
	return &authClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *authClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) JWTSign(ctx context.Context, in *JWTSignRequest, opts ...client.CallOption) (*JWTSignResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.JWTSign", in)
	out := new(JWTSignResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) JWTVerify(ctx context.Context, in *JWTVerifyRequest, opts ...client.CallOption) (*JWTverifyResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.JWTVerify", in)
	out := new(JWTverifyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	JWTSign(context.Context, *JWTSignRequest, *JWTSignResponse) error
	JWTVerify(context.Context, *JWTVerifyRequest, *JWTverifyResponse) error
}

func RegisterAuthHandler(s server.Server, hdlr AuthHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Auth{hdlr}, opts...))
}

type Auth struct {
	AuthHandler
}

func (h *Auth) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.AuthHandler.Create(ctx, in, out)
}

func (h *Auth) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.AuthHandler.Read(ctx, in, out)
}

func (h *Auth) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.AuthHandler.Update(ctx, in, out)
}

func (h *Auth) JWTSign(ctx context.Context, in *JWTSignRequest, out *JWTSignResponse) error {
	return h.AuthHandler.JWTSign(ctx, in, out)
}

func (h *Auth) JWTVerify(ctx context.Context, in *JWTVerifyRequest, out *JWTverifyResponse) error {
	return h.AuthHandler.JWTVerify(ctx, in, out)
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 413 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4d, 0xae, 0xd3, 0x30,
	0x18, 0x4c, 0xf2, 0x92, 0x86, 0xf7, 0xbd, 0xd7, 0xa4, 0xb5, 0x58, 0x98, 0xac, 0x2a, 0x23, 0xa4,
	0x56, 0x45, 0x5e, 0x14, 0x2e, 0x00, 0xec, 0xca, 0x2e, 0xb4, 0x74, 0x6d, 0xb0, 0x69, 0x23, 0x85,
	0x38, 0xb1, 0x13, 0x50, 0x0f, 0xc1, 0x15, 0xb8, 0x21, 0x77, 0x40, 0x71, 0x7e, 0x68, 0x52, 0x7e,
	0x24, 0xf4, 0x96, 0xe3, 0x8c, 0xe7, 0x1b, 0xcf, 0x7c, 0x01, 0x60, 0x55, 0x79, 0xa2, 0xb9, 0x92,
	0xa5, 0x24, 0xdf, 0x6d, 0x70, 0xf7, 0x5a, 0x28, 0x14, 0x80, 0x93, 0x70, 0x6c, 0x2f, 0xec, 0xa5,
	0x17, 0x3b, 0x09, 0x47, 0x8f, 0xc1, 0xd3, 0x25, 0xcf, 0x24, 0x76, 0x16, 0xf6, 0xf2, 0x36, 0x6e,
	0x00, 0x8a, 0xe0, 0x91, 0x12, 0x2c, 0xcd, 0xd8, 0x67, 0x81, 0x6f, 0xcc, 0x87, 0x1e, 0xd7, 0x37,
	0x8e, 0x8a, 0x71, 0x81, 0xdd, 0xe6, 0x86, 0x01, 0x08, 0x83, 0xff, 0x51, 0xa6, 0xa9, 0x38, 0x0a,
	0xec, 0x99, 0xf3, 0x0e, 0xd6, 0xfc, 0xfc, 0x24, 0x33, 0x81, 0x27, 0x0d, 0xdf, 0x80, 0xda, 0x47,
	0x51, 0x60, 0xdf, 0x1c, 0x39, 0x45, 0x41, 0xbe, 0xd9, 0x30, 0x7d, 0xa3, 0x04, 0x2b, 0x45, 0x2c,
	0x8a, 0x4a, 0xe8, 0xf2, 0x97, 0x33, 0x7b, 0xe4, 0x2c, 0x67, 0x5a, 0x7f, 0x95, 0x8a, 0xb7, 0x96,
	0x7b, 0xfc, 0x90, 0xae, 0xc9, 0x02, 0x82, 0xce, 0x8e, 0xce, 0x65, 0xa6, 0xc5, 0x38, 0x39, 0xf2,
	0x14, 0xee, 0x62, 0xc1, 0xf8, 0x5f, 0xed, 0x92, 0x15, 0xdc, 0x37, 0xa4, 0x56, 0xe4, 0x09, 0xb8,
	0x95, 0x16, 0xca, 0x90, 0xee, 0x36, 0x1e, 0xad, 0x3b, 0x89, 0xcd, 0x11, 0x79, 0x0d, 0xc1, 0xf6,
	0xb0, 0x7b, 0x97, 0x1c, 0xb3, 0xff, 0x4e, 0x80, 0xac, 0x21, 0xec, 0x35, 0xda, 0x89, 0x18, 0xfc,
	0x9c, 0x9d, 0x53, 0xc9, 0x78, 0x2b, 0xd3, 0x41, 0xf2, 0x1c, 0x66, 0xdb, 0xc3, 0xee, 0xbd, 0x50,
	0xc9, 0xa7, 0x73, 0x37, 0xf2, 0xcf, 0xec, 0x15, 0xcc, 0xb7, 0x87, 0xdd, 0x97, 0x96, 0xdd, 0x8a,
	0xff, 0xfe, 0xd1, 0x6f, 0x61, 0xba, 0xcf, 0xf9, 0x3f, 0xab, 0xec, 0x17, 0xc3, 0xb9, 0x5e, 0x8c,
	0x9b, 0x7e, 0x31, 0x66, 0x10, 0x74, 0x62, 0xcd, 0xd0, 0xcd, 0x0f, 0x1b, 0xdc, 0x57, 0x55, 0x79,
	0x42, 0x6b, 0x98, 0x34, 0x1d, 0xa1, 0x80, 0x0e, 0x76, 0x27, 0x0a, 0xe9, 0xb0, 0x3c, 0x62, 0xa1,
	0x67, 0xe0, 0xd6, 0x4d, 0xa0, 0x7b, 0x7a, 0xd1, 0x5a, 0x34, 0xa5, 0x97, 0xf5, 0x10, 0xab, 0xd6,
	0x6c, 0xc6, 0xa1, 0x80, 0x0e, 0x1e, 0x11, 0x85, 0x74, 0xe8, 0x83, 0x58, 0x88, 0x82, 0xdf, 0xc6,
	0x8d, 0x42, 0x3a, 0x2c, 0x2f, 0x9a, 0xd1, 0x51, 0x13, 0xc4, 0x42, 0x2f, 0xe1, 0xb6, 0x4f, 0x1c,
	0xcd, 0xe9, 0x38, 0xfd, 0x08, 0xd1, 0xab, 0x88, 0x89, 0xf5, 0x61, 0x62, 0x7e, 0xe1, 0x17, 0x3f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x34, 0x00, 0xbe, 0xfc, 0xd0, 0x03, 0x00, 0x00,
}
